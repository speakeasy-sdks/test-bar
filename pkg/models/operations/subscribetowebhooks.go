// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/test-bar/pkg/models/shared"
	"github.com/speakeasy-sdks/test-bar/pkg/types"
	"github.com/speakeasy-sdks/test-bar/pkg/utils"
	"net/http"
)

type SubscribeToWebhooksRequestBody struct {
	URL     *string `json:"url,omitempty"`
	webhook *string `const:"stockUpdate" json:"webhook,omitempty"`
}

func (s SubscribeToWebhooksRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SubscribeToWebhooksRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SubscribeToWebhooksRequestBody) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *SubscribeToWebhooksRequestBody) GetWebhook() *string {
	return types.String("stockUpdate")
}

type SubscribeToWebhooksResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// An unknown error occurred interacting with the API.
	Error *shared.Error
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *SubscribeToWebhooksResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SubscribeToWebhooksResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *SubscribeToWebhooksResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SubscribeToWebhooksResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
